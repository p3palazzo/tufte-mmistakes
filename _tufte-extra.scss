body.wide {
     // Makes it so that top-level <p> don't need to be wrapped in <section>
    article:not(.archive__item) {
        & > p,
        & > li,
        & > footer,
        & > table {
            width: 55%;
        }
    }
}

/* The default x-height for code is slightly too large in side notes */
.marginnote code, .sidenote code {
    font-size: 0.9rem;
}
/* ... and slightly too small in body text */
code {
    font-size: 1.05rem;
}
/* Also make the sidenote numbers hang */
.sidenote {
    text-indent: -0.4rem;
}
.sidenote:before {
    /* removes trailing space from the counter content */
    content: counter(sidenote-counter);
    left: -0.4rem;
}

/* To get spacing between lists, use paragraphs.
 * 0.25rem of spacing between list elements looks bad. */
li:not(:first-child) {
    margin-top: initial;
}

/* Make "Home" link small */
p.signoff {
    font-size: 1.2rem;
}

/*
 * Enable hyphens on supported platforms
 */
article {
    -webkit-hyphens: auto;
        -ms-hyphens: auto;
            hyphens: auto;
}
/* Sidenotes end up with a bunch of hyphens because they're so small */
.sidenote,
.marginnote {
  hyphens: none;
}

/* <details> is a little used collapsible block. */
details {
    @extend section;
    summary > p:first-child { display: inline; }
}

/* Tabular numbers for list items, small-caps Roman numerals */
ol,
ul {
    & > li::marker {
        font-variant: tabular-nums oldstyle-nums all-small-caps !important;
    }
}

/* Semantic emulation of NEWTHOUGHT
 *
 * .newthought provides no semantic cues in the markup.
 * However, we can style semantic elements so that they
 * look just like Tufte's emphasized paragraph openings.
 * We do this to <h5> and <h6> by analogy with the LaTeX
 * \paragraph and \subparagraph features. We have also
 * thrown in <dt> because what else are we going to use
 * definition lists for? */

// First, we make sure line heights and font sizes match.
article > dl,
section > dl {
    clear: left;
    font-size: $type-size-5;
    line-height: 1.3;
    dd {
        font-size: $type-size-5;
    }
}

// ...second, we float the headings so they run in with
// the following paragraph...
dt,
h5,
h6 {
    @include breakpoint($medium) {
        float: left;
        margin: 0 $type-size-5 0 0;
        padding: 0;
    }
}

// ...third, we take care of the styling...
dt,
dt > a,
h5,
h6 {
    @extend .newthought;
    clear: left;
    font-style: normal;
    font-variant: small-caps;
    font-weight: 400;
}

// Finally, we flush the <dt> inline with the <dd>.
// This reverses the margin setting on l.160 of _tufte.scss
.initial-content,
.page__content {
    dt:not(:first-child),
    li:not(:first-child) {
        margin-top: 0;
    }
}

// Bonus: fix width of <dl> inside <li>
li > dl {
    &, & > p {
        width: 100%;
    }
}
/* Here there ends the semantic emulation of .newthought */

/* Pandoc and Pandoc-crossref have strict and peculiar ways
 * of generating HTML figures. Notably, Pandoc applies classes
 * not to the <figure> tag, but to the <img> within it.
 * Pandoc-crossref has a .subfigures class used for complex
 * figures containing several related images. The caption of a
 * .subfigures is not a <figcaption> but a simple <p>. Here we
 * try to account for all these cases and make sure everything
 * lines up. */

// Subfigures need to share width and margin features of regular
// figures, but zero-padding them leads to unexpected results.
div.subfigures {
    -webkit-margin-start: 0;
    -webkit-margin-end: 0;
    margin: 0 0 3em 0;
    img:not(.align-right) + figcaption {
        float: left;
        margin-right: 1em;
    }
    &:not(.full) > p:not(:last-of-type) {
        float: left; // Allow caption to align to top of subfigure container
    }
}

// Fullwidth images within Pandoc-crossref figures and subfigures
div.fullwidth,
div.full {
    &:not(.subfigures) > figure {
        max-width: 100%;
    }
    &.subfigures p:last-of-type,
    &:not(.columns) figcaption {
        margin-right: 0;
    }
}

/*
 * Here there ends the styling of Pandoc and Pandoc-crossref figures
 */
// vim: set shiftwidth=4 foldmethod=indent :
